// lie grammar
// it is smalltalk-esque, but slightly more functional style

prog = <stmt> 'eof'
     | <stmt> <prog>

stmt = 'def' <ilist> '=' <expr> '.'
     | 'use' '<' <iden> '>' '.'
     | 'use' <iden> '.'
     | 'func' <iden> '(' <ilist> ')' ':' <expr> '.'
     | <expr> '.'

ilist = <iden>
      | <iden> ',' <ilist>
      
elist = <expr>
      | <expr> ',' <elist>

expr = 'let' <letblock> 'in' ':' <expr>
     | 'if' <expr> ':' <expr>. 'else' ':' <expr>
     | eq



mexpr = mexpr '+' term
      | mexpr '-' term

letblock = <ilist> '<-' <expr> '.'
	 | <ilist> '<-' <expr> ',' <letblock>